// Global Variables
$square: 40px;
$cell: $square + 2; //accounting for border

html,
body,
.grid-container {
  height: 100%;
  margin: 0;
}

.grid-container {
  display: grid;
  grid-template-columns: 0.8fr 1.8fr 0.4fr;
  grid-template-rows: 1.8fr 0.2fr;
  gap: 0px 0px;
  grid-template-areas: ". board .";
  position: relative;
}

.board {
  display: grid;
  grid-template: $cell * 5 $cell * 3 $cell * 5 / $cell * 3 $cell * 5 $cell * 3;
  gap: 0px 0px;
  grid-template-areas:
    "base-red arm-2 base-yellow"
    "arm-1 win arm-3"
    "base-blue arm-4 base-green";
  grid-area: board;
  position: relative;
  aspect-ratio: 1/1;
  height: 100vh;
}
.base-red {
  grid-area: base-red;
}

.base-yellow {
  grid-area: base-yellow;
}

.base-blue {
  grid-area: base-blue;
}

.base-green {
  grid-area: base-green;
}

// horizontal arms
.arm-1 {
  display: grid;
  grid-template: repeat(3, $cell) / repeat(5, $cell);
  gap: 0px 0px;
  grid-template-areas:
    ". . . . ."
    ". home-red home-red home-red home-red"
    ". . . . .";
  grid-area: arm-1;
}

.arm-3 {
  display: grid;
  grid-template: repeat(3, $cell) / repeat(5, $cell);
  gap: 0px 0px;
  grid-template-areas:
    ". . . . ."
    "home-green home-green home-green home-green ."
    ". . . . .";
  grid-area: arm-3;
}

.arm-2 {
  display: grid;
  grid-template: repeat(5, $cell) / repeat(3, $cell);
  gap: 0px 0px;
  grid-template-areas:
    ". . ."
    ". home-yellow ."
    ". home-yellow ."
    ". home-yellow ."
    ". home-yellow .";
  grid-auto-flow: column;
  grid-area: arm-2;
}

// vertical arms
.arm-4 {
  display: grid;
  grid-template: repeat(5, $cell) / repeat(3, $cell);
  gap: 0px 0px;
  grid-template-areas:
    ". home-blue ."
    ". home-blue ."
    ". home-blue ."
    ". home-blue ."
    ". . .";
  grid-auto-flow: column;
  grid-area: arm-4;
}

// horizontal lanes
.home-red {
  display: grid;
  grid-template: $cell / repeat(4, $cell);
  gap: 0px 0px;
  grid-template-areas: ". . . .";
  grid-auto-flow: row;
  grid-area: home-red;
}

.home-green {
  display: grid;
  grid-template: $cell / repeat(4, $cell);
  gap: 0px 0px;
  grid-template-areas: ". . . .";
  grid-auto-flow: row;
  grid-area: home-green;
}

// vertical lanes
.home-yellow {
  display: grid;
  grid-template: repeat(4, $cell) / $cell;
  gap: 0px 0px;
  grid-template-areas:
    "."
    "."
    "."
    ".";
  grid-auto-flow: column;
  grid-area: home-yellow;
}

.home-blue {
  display: grid;
  grid-template: repeat(4, $cell) / $cell;
  gap: 0px 0px;
  grid-template-areas:
    "."
    "."
    "."
    ".";
  grid-auto-flow: column;
  grid-area: home-blue;
}

.win {
  display: grid;
  grid-template: $cell / $cell;
  gap: 0px 0px;
  grid-template-areas: ".";
  grid-area: win;
}

.space {
  display: block;
  height: auto;
  background: center / contain no-repeat;
  margin: 0;
  border: 1px solid;
  height: min($square);
  width: min($square);

  &.path {
    background-color: #e7e5db;
    border-color: grey;
  }

  &[class*="red"] {
    background-color: rgba(252, 72, 72, 0.774);
    border-color: rgb(179, 0, 0);
  }

  &[class*="green"] {
    background-color: rgba(252, 72, 72, 0.774);
    border-color: rgb(179, 0, 0);
  }
  &[class*="blue"] {
    background-color: rgba(252, 72, 72, 0.774);
    border-color: rgb(179, 0, 0);
  }
  &[class*="yellow"] {
    background-color: rgba(252, 72, 72, 0.774);
    border-color: rgb(179, 0, 0);
  }
}

/* --- Modal Animation src: https://codepen.io/ainalem/pen/RqYZNO --- */
.roll-dice {
  background: #dedbdf;
  border-radius: 16px;
  height: 32px;
  overflow: hidden;
  position: relative;
  transition: width 300ms cubic-bezier(0.4, 0, 0.2, 1),
    height 300ms cubic-bezier(0.4, 0, 0.2, 1),
    box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),
    border-radius 300ms cubic-bezier(0.4, 0, 0.2, 1);

    input {
      display: none;
    }
  
    .btn-group {
      margin: 4px;
      justify-self: center;
    }

  :not(.expand) {
    cursor: pointer;
  }
  :not(.expand):hover {
    background: #c2c0c2;
  }
  #collapsed {
    position: absolute;
    transition: opacity 200ms 100ms cubic-bezier(0, 0, 0.2, 1);
  }
  #rollTxt {
    display: flex;
    flex-direction: row;
    transform-origin: 0 0;
    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
    font-size: 14px;
    line-height: 32px;
    margin-left: 10px;
  }
  #expanded {
    opacity: 0;
    position: absolute;
    transition: opacity 100ms cubic-bezier(0.4, 0, 1, 1);
  }
  #header {
    transform: scale(0.55);
    transform-origin: 0 0;
    transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  }
  .headerTxt {
    background: #6422eb;
    display: flex;
    flex-direction: row;
    height: 70px;
    transition: height 300ms cubic-bezier(0.4, 0, 0.2, 1);
    width: 300px;
    color: #efd8ef;
    font-size: 16px;
    line-height: 70px;
    justify-content: center;
  }

  #content {
    background: #fff;
    color: #444247;
    font-size: 14px;
    height: 200px;
    padding-top: 5px;
    width: 300px;
  }
}

.expand {
  &.roll-dice {
    border-radius: 6px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.16);
    height: 200px;
    width: 300px;
  }

  #collapsed {
    opacity: 0;
    transition: opacity 100ms cubic-bezier(0.4, 0, 1, 1);
  }

  #rollTxt {
    transform: scale(1.91);
  }

  #expanded {
    opacity: 1;
    transition: opacity 200ms 100ms cubic-bezier(0, 0, 0.2, 1);
  }

  #header {
    transform: scale(1);
  }
}
